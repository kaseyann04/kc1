# -*- coding: utf-8 -*-
"""Credit card fraud detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Atz7P9yYrOzK6c5qrDVaxskdUqkrnOKl
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler

CUST = pd.read_csv(r'/content/customer_data.csv')
CUST

PAYMENT=pd.read_csv('/content/payment_data.csv')
PAYMENT

CUST.info()

PAYMENT.info()

PAYMENT.isnull().sum()

from sklearn.impute import KNNImputer
impute = KNNImputer(n_neighbors= 3)
CUST['fea_2'] = impute.fit_transform(CUST[['fea_2']])

CUST.isnull().sum()

CUST

cols = []
from sklearn.impute import KNNImputer
impute = KNNImputer(n_neighbors= 3)
CUST['fea_2'] = impute.fit_transform(CUST[['fea_2']])

CUST.info()

CUST = pd.read_csv(r'/content/customer_data.csv')
PAYMENT=pd.read_csv('/content/payment_data.csv')
# Merge the datasets based on a common key
merged_df = CUST.merge(PAYMENT, on='id')

merged_df.drop(columns=['update_date','report_date'],inplace=True)

merged_df.isnull().sum()

from sklearn.impute import KNNImputer
impute = KNNImputer(n_neighbors= 3)
cols = ['prod_limit','highest_balance','fea_2']
merged_df[cols] = merged_df[cols].round()
for i in cols:
    merged_df[i] = impute.fit_transform(merged_df[[i]])

from sklearn.impute import KNNImputer
impute = KNNImputer(n_neighbors= 3)
cols = ['prod_limit','highest_balance','fea_2']
merged_df[cols] = merged_df[cols].round()
for i in cols:
    merged_df[i] = impute.fit_transform(merged_df[[i]])

x = merged_df.drop(columns=['label'],axis=1)
y = merged_df['label']

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(x,y, test_size= 0.2)

from sklearn.ensemble import RandomForestClassifier

# Fit the random forest classifier
model1 = RandomForestClassifier()
model1.fit(X_train, y_train)

y_pred = model1.predict(X_test)
predictions = model1.predict(X_test)

from sklearn.metrics import accuracy_score

# Calculate accuracy
accuracy = accuracy_score(y_test,y_pred)
accuracy1 = accuracy_score(y_test,predictions)

print('RandomForestClassifier:' )
print("Accuracy:", accuracy1)

x.columns

import numpy as np
f=np.array([[58982399,1,0,0,30,34,10,85790.0,0.0,40863.0,1,1294.0,1,500000,2,4,9,105,5,650005,1.0]])
model1.predict(f)